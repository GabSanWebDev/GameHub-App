{"ast":null,"code":"const initialState = {\n  videogames: [],\n  intocado: [],\n  allVideogames: [],\n  ratingVideogames: [],\n  genres: [],\n  detail: []\n};\n\nfunction rootReducer(state = initialState, action) {\n  var _state$ratingVideogam;\n\n  switch (action.type) {\n    case 'GET_VIDEOGAMES':\n      return { ...state,\n        videogames: action.payload,\n        intocado: action.payload,\n        allVideogames: action.payload\n      };\n\n    case 'GET_NAME_VIDEOGAMES':\n      return { ...state,\n        videogames: action.payload,\n        allVideogames: action.payload,\n        intocado: action.payload\n      };\n\n    case 'GET_DETAILS':\n      return { ...state,\n        detail: action.payload\n      };\n    //------------------------------------------FIN DEL GET_VIDEOGAMES---------------------------------------------------------//\n\n    case 'POST_VIDEOGAME':\n      return { ...state\n      };\n\n    case 'GET_GENRES':\n      return { ...state,\n        genres: action.payload\n      };\n\n    case 'SORT_BY_RATING':\n      // const ratingFiltered = state.ratingVideogames?.filter(vg => Math.floor(vg.rating) === parseInt(action.rating, 10))\n      const ratingSorted = action.rating === 'btw' ? state.videogames.sort(function (a, b) {\n        if (a.rating > b.rating) {\n          return -1;\n        }\n\n        if (a.rating < b.rating) {\n          return 1;\n        }\n\n        return 0;\n      }) : state.videogames.sort(function (a, b) {\n        if (a.rating > b.rating) {\n          return 1;\n        }\n\n        if (a.rating < b.rating) {\n          return -1;\n        }\n\n        return 0;\n      });\n      return { ...state,\n        videogames: action.rating === 'all' ? state.allVideogames : ratingSorted\n      };\n\n    case 'FILTER_BY_RATING':\n      // const ratingFiltered = state.ratingVideogames?.filter(vg => Math.floor(vg.rating) === parseInt(action.rating, 10))\n      const ratingFiltered = (_state$ratingVideogam = state.ratingVideogames) === null || _state$ratingVideogam === void 0 ? void 0 : _state$ratingVideogam.filter(vg => Math.floor(vg.rating) === parseInt(action.rating, 10));\n      return { ...state,\n        videogames: action.rating === 'all' ? state.allVideogames : ratingSorted\n      };\n    //------------------------------------------FIN DEL FILTER_BY_RATING---------------------------------------------------------//\n\n    case 'FILTER_CREATED':\n      const untouched = state.intocado;\n      const createdFilter = action.payload === 'dbg' ? untouched.filter(vg => vg.createdInDb) : untouched.filter(vg => !vg.createdInDb);\n      return { ...state,\n        videogames: action.payload === 'all' ? state.allVideogames : createdFilter\n      };\n    //------------------------------------------FIN DEL FILTER_CREATED---------------------------------------------------------//\n\n    case 'ORDER_BY_NAME':\n      const sortedArray = action.payload === 'asc' ? state.videogames.sort(function (a, b) {\n        if (a.name.toLowerCase() > b.name.toLowerCase()) {\n          return 1;\n        }\n\n        if (a.name.toLowerCase() < b.name.toLowerCase()) {\n          return -1;\n        }\n\n        return 0;\n      }) : state.videogames.sort(function (a, b) {\n        if (a.name.toLowerCase() > b.name.toLowerCase()) {\n          return -1;\n        }\n\n        if (a.name.toLowerCase() < b.name.toLowerCase()) {\n          return 1;\n        }\n\n        return 0;\n      });\n      return { ...state,\n        videogames: sortedArray\n      };\n    //------------------------------------------FIN DEL ORDER_BY_NAME---------------------------------------------------------//\n\n    case 'FILTER_BY_GENRE':\n      const untouched2 = state.videogames;\n      const filterVideogames = untouched2.filter(vg => vg.genres.includes(action.payload));\n      return { ...state,\n        videogames: action.payload === 'all' ? state.allVideogames : filterVideogames\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;","map":{"version":3,"sources":["C:/Users/Usuario/Desktop/ClasesHenry/PI-Videogames/PI-Videogames-main/client/src/reducer/index.js"],"names":["initialState","videogames","intocado","allVideogames","ratingVideogames","genres","detail","rootReducer","state","action","type","payload","ratingSorted","rating","sort","a","b","ratingFiltered","filter","vg","Math","floor","parseInt","untouched","createdFilter","createdInDb","sortedArray","name","toLowerCase","untouched2","filterVideogames","includes"],"mappings":"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","sourcesContent":["\r\n\r\nconst initialState = {\r\n    videogames: [],\r\n    intocado: [],\r\n    allVideogames: [],\r\n    ratingVideogames: [],\r\n    genres: [],\r\n    detail: [],\r\n    \r\n\r\n}\r\n\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'GET_VIDEOGAMES': \r\n        return {\r\n            ...state,\r\n            videogames: action.payload,\r\n            intocado: action.payload,\r\n            allVideogames: action.payload\r\n        }\r\n\r\n        case 'GET_NAME_VIDEOGAMES': \r\n        return{\r\n            ...state,\r\n            videogames: action.payload,\r\n            allVideogames: action.payload,\r\n            intocado: action.payload,\r\n        }\r\n        case 'GET_DETAILS': \r\n        return{\r\n            ...state,\r\n            detail: action.payload,\r\n            \r\n        }\r\n\r\n        //------------------------------------------FIN DEL GET_VIDEOGAMES---------------------------------------------------------//\r\n        case 'POST_VIDEOGAME': return{\r\n            ...state,\r\n            \r\n        }\r\n        case 'GET_GENRES': return{\r\n            ...state,\r\n            genres: action.payload,\r\n        }\r\n        case 'SORT_BY_RATING':\r\n            // const ratingFiltered = state.ratingVideogames?.filter(vg => Math.floor(vg.rating) === parseInt(action.rating, 10))\r\n            const ratingSorted = action.rating === 'btw' ?\r\n            state.videogames.sort(function (a, b) {\r\n                if (a.rating > b.rating) {\r\n                    return -1;\r\n                }\r\n                if (a.rating < b.rating) {\r\n                    return 1;\r\n                }\r\n                return 0;\r\n            }) : state.videogames.sort(function (a, b) {\r\n                if (a.rating > b.rating) {\r\n                    return 1;\r\n                }\r\n                if (a.rating < b.rating) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            }) \r\n            return {\r\n                ...state,\r\n                videogames: action.rating === 'all' ? state.allVideogames : ratingSorted\r\n            }\r\n        case 'FILTER_BY_RATING':\r\n            // const ratingFiltered = state.ratingVideogames?.filter(vg => Math.floor(vg.rating) === parseInt(action.rating, 10))\r\n            const ratingFiltered = state.ratingVideogames?.filter(vg => Math.floor(vg.rating) === parseInt(action.rating, 10))\r\n            return {\r\n                ...state,\r\n                videogames: action.rating === 'all' ? state.allVideogames : ratingSorted\r\n            }\r\n        //------------------------------------------FIN DEL FILTER_BY_RATING---------------------------------------------------------//\r\n\r\n\r\n        case 'FILTER_CREATED':\r\n            const untouched = state.intocado;\r\n            const createdFilter = action.payload === 'dbg' ? untouched.filter(vg => vg.createdInDb) : untouched.filter(vg => !vg.createdInDb)\r\n            return {\r\n                ...state,\r\n                videogames: action.payload === 'all' ? state.allVideogames : createdFilter\r\n            }\r\n        //------------------------------------------FIN DEL FILTER_CREATED---------------------------------------------------------//\r\n\r\n\r\n        case 'ORDER_BY_NAME':\r\n            const sortedArray = action.payload === 'asc' ?\r\n                state.videogames.sort(function (a, b) {\r\n                    if (a.name.toLowerCase() > b.name.toLowerCase()) {\r\n                        return 1;\r\n                    }\r\n                    if (a.name.toLowerCase() < b.name.toLowerCase()) {\r\n                        return -1;\r\n                    }\r\n                    return 0;\r\n                }) :\r\n                state.videogames.sort(function (a, b) {\r\n                    if (a.name.toLowerCase() > b.name.toLowerCase()) {\r\n                        return -1;\r\n                    }\r\n                    if (a.name.toLowerCase() < b.name.toLowerCase()) {\r\n                        return 1;\r\n                    }\r\n                    return 0;\r\n                })\r\n            return {\r\n                ...state,\r\n                videogames: sortedArray\r\n            }\r\n        //------------------------------------------FIN DEL ORDER_BY_NAME---------------------------------------------------------//\r\n\r\n        case 'FILTER_BY_GENRE':\r\n            const untouched2 = state.videogames\r\n            const filterVideogames =  untouched2.filter(vg => vg.genres.includes(action.payload));\r\n            return {\r\n                ...state,\r\n                videogames: action.payload === 'all' ? state.allVideogames : filterVideogames \r\n            }\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}