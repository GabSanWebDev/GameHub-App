{"ast":null,"code":"const initialState = {\n  videogames: [],\n  ratingVideogames: [],\n  createdGames: [],\n  genresGames: []\n};\n\nfunction rootReducer(state = initialState, action) {\n  var _state$ratingVideogam;\n\n  switch (action.type) {\n    case 'GET_VIDEOGAMES':\n      return { ...state,\n        videogames: action.payload,\n        ratingVideogames: action.payload,\n        createdGames: action.payload,\n        genresGames: action.payload\n      };\n    //------------------------------------------FIN DEL GET_VIDEOGAMES---------------------------------------------------------//\n\n    case 'FILTER_BY_RATING':\n      const ratingFiltered = (_state$ratingVideogam = state.ratingVideogames) === null || _state$ratingVideogam === void 0 ? void 0 : _state$ratingVideogam.filter(vg => Math.floor(vg.rating) === parseInt(action.rating, 10));\n      return { ...state,\n        videogames: action.rating === \"all\" ? state.ratingVideogames : ratingFiltered\n      };\n    //------------------------------------------FIN DEL FILTER_BY_RATING---------------------------------------------------------//\n\n    case 'FILTER_CREATED':\n      const createdFilter = action.payload === 'dbg' ? state.ratingVideogames.filter(vg => vg.createdInDb) : state.ratingVideogames.filter(vg => !vg.createdInDb);\n      return { ...state,\n        videogames: action.payload === 'all' ? state.ratingVideogames : createdFilter\n      };\n    //------------------------------------------FIN DEL FILTER_CREATED---------------------------------------------------------//\n\n    case 'ORDER_BY_NAME':\n      let sortedArray = action.payload === 'asc' ? state.videogames.sort(function (a, b) {\n        if (a.name.toLowerCase() > b.name.toLowerCase()) {\n          return 1;\n        }\n\n        if (a.name.toLowerCase() < b.name.toLowerCase()) {\n          return -1;\n        }\n\n        return 0;\n      }) : state.videogames.sort(function (a, b) {\n        if (a.name.toLowerCase() > b.name.toLowerCase()) {\n          return -1;\n        }\n\n        if (a.name.toLowerCase() < b.name.toLowerCase()) {\n          return 1;\n        }\n\n        return 0;\n      });\n      return { ...state,\n        videogames: sortedArray\n      };\n    //------------------------------------------FIN DEL ORDER_BY_NAME---------------------------------------------------------//\n\n    case 'FILTER_BY_GENRE':\n      const filterVideogames = action.payload === 'all' ? state.genresGames : state.genresGames.filter(vg => vg.genres.includes(action.payload));\n      return { ...state,\n        videogames: filterVideogames\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;","map":{"version":3,"sources":["C:/Users/Usuario/Desktop/ClasesHenry/PI-Videogames/PI-Videogames-main/client/src/reducer/index.js"],"names":["initialState","videogames","ratingVideogames","createdGames","genresGames","rootReducer","state","action","type","payload","ratingFiltered","filter","vg","Math","floor","rating","parseInt","createdFilter","createdInDb","sortedArray","sort","a","b","name","toLowerCase","filterVideogames","genres","includes"],"mappings":"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","sourcesContent":["\r\n\r\nconst initialState = {\r\n    videogames: [],\r\n    ratingVideogames: [],\r\n    createdGames: [],\r\n    genresGames: []\r\n}\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'GET_VIDEOGAMES': return {\r\n            ...state,\r\n            videogames: action.payload,\r\n            ratingVideogames: action.payload,\r\n            createdGames: action.payload,\r\n            genresGames: action.payload,\r\n        }\r\n        //------------------------------------------FIN DEL GET_VIDEOGAMES---------------------------------------------------------//\r\n        case 'FILTER_BY_RATING':\r\n            const ratingFiltered = state.ratingVideogames?.filter(vg => Math.floor(vg.rating) === parseInt(action.rating, 10))\r\n            return {\r\n                ...state,\r\n                videogames: action.rating === \"all\" ? state.ratingVideogames : ratingFiltered,\r\n            }\r\n        //------------------------------------------FIN DEL FILTER_BY_RATING---------------------------------------------------------//\r\n\r\n\r\n        case 'FILTER_CREATED':\r\n            const createdFilter = action.payload === 'dbg' ? state.ratingVideogames.filter(vg => vg.createdInDb) : state.ratingVideogames.filter(vg => !vg.createdInDb)\r\n            return {\r\n                ...state,\r\n                videogames: action.payload === 'all' ? state.ratingVideogames : createdFilter\r\n            }\r\n        //------------------------------------------FIN DEL FILTER_CREATED---------------------------------------------------------//\r\n\r\n\r\n        case 'ORDER_BY_NAME':\r\n            let sortedArray = action.payload === 'asc' ?\r\n                state.videogames.sort(function (a, b) {\r\n                    if (a.name.toLowerCase() > b.name.toLowerCase()) {\r\n                        return 1;\r\n                    }\r\n                    if (a.name.toLowerCase() < b.name.toLowerCase()) {\r\n                        return -1;\r\n                    }\r\n                    return 0;\r\n                }) :\r\n                state.videogames.sort(function (a, b) {\r\n                    if (a.name.toLowerCase() > b.name.toLowerCase()) {\r\n                        return -1;\r\n                    }\r\n                    if (a.name.toLowerCase() < b.name.toLowerCase()) {\r\n                        return 1;\r\n                    }\r\n                    return 0;\r\n                })\r\n            return {\r\n                ...state,\r\n                videogames: sortedArray\r\n            }\r\n        //------------------------------------------FIN DEL ORDER_BY_NAME---------------------------------------------------------//\r\n\r\n        case 'FILTER_BY_GENRE':\r\n            const filterVideogames = action.payload ===  'all' ? state.genresGames : state.genresGames.filter(vg => vg.genres.includes(action.payload));\r\n            return {\r\n                ...state,\r\n                videogames: filterVideogames\r\n            }\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}